"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard")["default"];
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault")["default"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _qrcode = require("qrcode.react");
var _classnames = _interopRequireDefault(require("classnames"));
var _icons = require("@ant-design/icons");
var _configProvider = require("../config-provider");
var _LocaleReceiver = _interopRequireDefault(require("../locale/LocaleReceiver"));
var _warning = _interopRequireDefault(require("../_util/warning"));
var _index = _interopRequireDefault(require("./style/index"));
var _spin = _interopRequireDefault(require("../spin"));
var _button = _interopRequireDefault(require("../button"));
var _theme = _interopRequireDefault(require("../theme"));
var useToken = _theme["default"].useToken;
var QRCode = function QRCode(props) {
  var value = props.value,
    _props$icon = props.icon,
    icon = _props$icon === void 0 ? '' : _props$icon,
    _props$size = props.size,
    size = _props$size === void 0 ? 160 : _props$size,
    _props$iconSize = props.iconSize,
    iconSize = _props$iconSize === void 0 ? 40 : _props$iconSize,
    _props$color = props.color,
    color = _props$color === void 0 ? '#000' : _props$color,
    _props$errorLevel = props.errorLevel,
    errorLevel = _props$errorLevel === void 0 ? 'M' : _props$errorLevel,
    _props$status = props.status,
    status = _props$status === void 0 ? 'active' : _props$status,
    _props$bordered = props.bordered,
    bordered = _props$bordered === void 0 ? true : _props$bordered,
    onRefresh = props.onRefresh,
    style = props.style,
    className = props.className,
    customizePrefixCls = props.prefixCls;
  var _useContext = (0, _react.useContext)(_configProvider.ConfigContext),
    getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls('qrcode', customizePrefixCls);
  var _useStyle = (0, _index["default"])(prefixCls),
    _useStyle2 = (0, _slicedToArray2["default"])(_useStyle, 2),
    wrapSSR = _useStyle2[0],
    hashId = _useStyle2[1];
  var _useToken = useToken(),
    token = _useToken.token;
  var qrCodeProps = (0, _react.useMemo)(function () {
    var imageSettings = {
      src: icon,
      x: undefined,
      y: undefined,
      height: iconSize,
      width: iconSize,
      excavate: true
    };
    return {
      value: value,
      size: size - (token.paddingSM + token.lineWidth) * 2,
      level: errorLevel,
      bgColor: 'transparent',
      fgColor: color,
      imageSettings: icon ? imageSettings : undefined
    };
  }, [errorLevel, color, icon, iconSize, size, value]);
  if (!value) {
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== "production" ? (0, _warning["default"])(false, 'QRCode', 'need to receive `value` props') : void 0;
    }
    return null;
  }
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== "production" ? (0, _warning["default"])(!(icon && errorLevel === 'L'), 'QRCode', 'ErrorLevel `L` is not recommended to be used with `icon`, for scanning result would be affected by low level.') : void 0;
  }
  var cls = (0, _classnames["default"])(prefixCls, className, hashId, (0, _defineProperty2["default"])({}, prefixCls + "-borderless", !bordered));
  return wrapSSR( /*#__PURE__*/_react["default"].createElement(_LocaleReceiver["default"], {
    componentName: "QRCode"
  }, function (locale) {
    return /*#__PURE__*/_react["default"].createElement("div", {
      style: (0, _extends2["default"])((0, _extends2["default"])({}, style), {
        width: size,
        height: size
      }),
      className: cls
    }, status !== 'active' && /*#__PURE__*/_react["default"].createElement("div", {
      className: prefixCls + "-mask"
    }, status === 'loading' && /*#__PURE__*/_react["default"].createElement(_spin["default"], null), status === 'expired' && /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement("p", null, locale.expired), typeof onRefresh === 'function' && /*#__PURE__*/_react["default"].createElement(_button["default"], {
      type: "link",
      icon: /*#__PURE__*/_react["default"].createElement(_icons.ReloadOutlined, null),
      onClick: onRefresh
    }, locale.refresh))), /*#__PURE__*/_react["default"].createElement(_qrcode.QRCodeCanvas, (0, _extends2["default"])({}, qrCodeProps)));
  }));
};
var _default = QRCode;
exports["default"] = _default;